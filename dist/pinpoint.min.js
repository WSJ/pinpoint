function Pinpoint(a){"use strict";if(null==window.L)throw"Leaflet.js not present on page.";var b=this;this.opts=a,this.opts.el=this.opts.el||"#map-el",this.$el=$(this.opts.el),this.opts.basemap=a.basemap||"http://{s}.tile.osm.org/{z}/{x}/{y}.png",this.opts.basemapCredit=a.basemapCredit||'<a href="http://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> | &copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',this.addElements(),this.fillText(),this.setAspectRatio(),this.setupMap(),this.calcBounds(),this.disableInteraction(),this.opts.creation&&(this.enableInteraction(),this.map.remove(),this.map.setMaxBounds(null),this.setupMap({nozoomlimits:!0})),this.$el.find(".map-outer").click(this.enableInteraction.bind(b)),a.minimap&&this.addMinimap();for(var c=0;c<a.markers.length;c++)this.addMarker(a.markers[c],c);if(console.log(a),a.geojson&&this.addGeoJSON(a.geojson),"undefined"!=typeof Iframe){Iframe.init()}$(window).smartresize&&$(window).smartresize(this.onWindowResize.bind(b))}Pinpoint.prototype.addElements=function(){var a='<!-- Generator: Adobe Illustrator 16.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" id="Layer_5" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 width="13.312px" height="15.267px" viewBox="0 0 13.312 15.267" enable-background="new 0 0 13.312 15.267" xml:space="preserve"><path fill="#697379" d="M13.312,6.4c0.002-1.229-2.215-1.265-2.203,0.008c0,0,0-0.604,0-0.846c0.016-1.146-2.188-1.216-2.2,0.007	v-0.44c0-1.251-2.307-1.277-2.307,0.007c0,0,0-2.586,0-4.218c0-1.203-2.341-1.246-2.341,0.005v7.485L2.049,6.199	C1.292,5.286-0.58,6.604,0.177,7.68l5.129,6.233c0,0,1.097,1.354,3.285,1.354c1.963,0,2.704-0.394,3.481-1.2	c0.754-0.78,1.24-1.657,1.24-2.938C13.312,10.76,13.312,7.192,13.312,6.4z"/></svg>',b='<p class="pinpoint-hed"></p><p class="pinpoint-dek"></p><div class="map-outer inactive"><span class="map-cover"></span><span class="image-interactive-icon">'+a+'<span class="image-interactive-icon-text">Zoom/Pan</span></span><span class="image-interactive-icon image-interactive-icon-hover">'+a.replace("#697379","white")+'<span class="image-interactive-icon-text">Zoom/Pan</span></span><div class="map-inner"></div> </div> <p class="pinpoint-note"></p> <p class="pinpoint-source">'+this.opts.basemapCredit+"</p>";this.$el.html(b)},Pinpoint.prototype.setAspectRatio=function(){var a={tall:1.2,square:1,wide:2/3},b=a[this.opts["aspect-ratio"]],c=this.$el.find(".map-inner").width()*b;this.$el.find(".map-inner, .map-cover").height(c),this.map&&this.map.invalidateSize()},Pinpoint.prototype.onWindowResize=function(){this.setAspectRatio(),$(window).trigger("resize")},Pinpoint.prototype.setupMap=function(a){var b=this.opts,c=b.zoom+1,d=b.zoom-1;a&&a.nozoomlimits&&(c=20,d=1);var e={scrollWheelZoom:!0,keyboard:!1,maxZoom:c,minZoom:d,attributionControl:!1},f=this.$el.find(".map-inner")[0];this.map=L.map(f,e).setView([b.lat,b.lon],b.zoom),L.control.scale({position:"topright"}).addTo(this.map);var g=this.$el.find(".leaflet-control-scale.leaflet-control");g.find(".leaflet-control-scale-line").eq(0).detach().appendTo(g),L.tileLayer(this.opts.basemap).addTo(this.map),b.dragend&&this.map.on("dragend",b.dragend),b.zoomend&&this.map.on("zoomend",b.zoomend)},Pinpoint.prototype.addMarker=function(a,b){this.markers=this.markers||[],a.icon=a.icon||"circle";var c=L.divIcon({className:"marker-icon marker-icon-"+a.icon}),d=L.marker([a.lat,a.lon],{icon:c,draggable:this.opts.creation,title:b}).addTo(this.map);a.label=a.label||"plain";var e=a["label-direction"]||"north";if("callout"===a.label)var f=L.divIcon({className:"marker-label-callout "+e,html:'<div class="marker-inner">'+a.text+"</div>"});else if("plain"===a.label)var f=L.divIcon({className:"marker-label-plain "+e,html:'<div class="marker-inner">'+a.text+"</div>"});var g=L.marker([a.lat,a.lon],{icon:f}).addTo(this.map),h=this.$el.find(".marker-inner").eq(-1);h.css("margin-left",-h.outerWidth()/2),setTimeout(function(){h.css("margin-left",-h.outerWidth()/2)}.bind(this),100),this.opts.markerdragend&&d.on("dragend",this.opts.markerdragend),this.markers.push({icon:d,text:g})},Pinpoint.prototype.addMinimap=function(){var a=L.tileLayer(this.opts.basemap,{attribution:""}),b=new L.Control.MiniMap(a,{zoomLevelOffset:this.opts["minimap-zoom-offset"]||-5,width:100,height:100,aimingRectOptions:{color:"black",weight:1,opacity:1,fillColor:"#999",fillOpacity:0}}).addTo(this.map);b._miniMap.dragging.disable(),b._miniMap.touchZoom.disable(),b._miniMap.doubleClickZoom.disable(),b._miniMap.scrollWheelZoom.disable(),b._miniMap.tap&&b._miniMap.tap.disable()},Pinpoint.prototype.calcBounds=function(){function a(a){var b=1/3,c=a.getBounds(),d=Math.abs(c._southWest.lng-c._northEast.lng)*b,e=Math.abs(c._southWest.lat-c._northEast.lat)*b,f={lat:c._southWest.lat-e,lng:c._southWest.lng-d},g={lat:c._northEast.lat+e,lng:c._northEast.lng+d};return L.latLngBounds(f,g)}var b=a(this.map);this.map.setMaxBounds(b)},Pinpoint.prototype.fillText=function(){this.opts.hed&&this.opts.hed.length>0?this.$el.find(".pinpoint-hed").text(this.opts.hed):this.$el.find(".pinpoint-hed").hide(),this.opts.dek&&this.opts.dek.length>0?this.$el.find(".pinpoint-dek").text(this.opts.dek):this.$el.find(".pinpoint-dek").hide(),this.opts.note&&this.opts.note.length>0?this.$el.find(".pinpoint-note").html(this.opts.note):this.$el.find(".pinpoint-note").hide(),this.$el.find(".pinpoint-hed:visible, .pinpoint-dek:visible").eq(0).addClass("pinpoint-topline")},Pinpoint.prototype.disableInteraction=function(){this.map;return this.$el.find(".map-outer").addClass("inactive"),this},Pinpoint.prototype.enableInteraction=function(){this.map;return this.$el.find(".map-outer").removeClass("inactive"),this},Pinpoint.prototype.remove=function(){this.map.remove(),this.$el.empty()},Pinpoint.prototype.addGeoJSON=function(a){function b(a,b){for(var c=0;c<b.length;c++)if(b[c]===a)return!0;return!1}var c=this.map,d=a.features;console.log(d);for(var e=0;e<d.length;e++)if(d[e].geometry&&d[e].geometry){if(d[e].properties&&d[e].properties.pinpointStyle)var f=d[e].properties.pinpointStyle;else var f="";var g=d[e].geometry.type;b(g,["LineString","MultiLineString","Polygon","MultiPolygon"])&&L.geoJson(d[e].geometry,{style:{className:"pinpoint-geojson "+f}}).addTo(c)}};